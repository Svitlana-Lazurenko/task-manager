{"version":3,"file":"static/js/45.042d966b.chunk.js","mappings":"qLAEaA,E,QAASC,EAAAA,OAAH,sB,SCInB,EAJyB,WACvB,OAAO,SAACD,EAAD,iBACR,C,0HCJYE,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,aAArB,EAExBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,WAAWG,SAArB,E,6BCAvBC,EAAOP,EAAAA,EAAAA,GAAH,gQAcJQ,EAAOR,EAAAA,EAAAA,KAAH,oEAKJS,EAAUT,EAAAA,EAAAA,IAAH,0CAIPD,EAASC,EAAAA,EAAAA,OAAH,wqC,SCQnB,EA7BqB,SAAC,GAAuC,IAArCU,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAEzCC,GAAWC,EAAAA,EAAAA,MACXC,EAAaN,EASnB,OACE,UAACH,EAAD,YACE,SAACC,EAAD,UAAOG,KACP,SAACH,EAAD,UAAOI,KACP,SAACJ,EAAD,UAAOK,KACP,UAACJ,EAAD,YACE,SAACV,EAAD,CAAQkB,KAAK,SAASC,QAbC,WAE5B,EAWK,sBAGA,SAACnB,EAAD,CAAQkB,KAAK,SAASC,QAbE,SAAAR,GAC5BI,EAAS,UAAD,OAAWE,GACpB,EAWK,uBAMP,EC7BYG,EAAOnB,EAAAA,EAAAA,GAAH,+KCqBjB,EAlBqB,WACnB,IAAMG,GAAaiB,EAAAA,EAAAA,IAAYnB,GAE/B,OACE,SAACkB,EAAD,UACGhB,EAAWkB,KAAI,gBAAGC,EAAH,EAAGA,IAAKX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,UAAWX,EAAzB,EAAyBA,cAAzB,OACd,SAAC,EAAD,CAEEF,GAAIY,EACJX,KAAMA,EACNE,KAAMU,EACNX,cAAeA,GAJVU,EAFO,KAWrB,E,UCbKE,EAAS,CACbC,UAAW,CACTC,QAAS,SACTC,gBAAiB,oBAIN,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXxB,GAAYc,EAAAA,EAAAA,IAAYf,GAM9B,OAJA0B,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,iBAAKI,MAAOT,EAAOC,UAAnB,WACE,SAACS,EAAA,EAAD,WACE,sDAEF,SAACC,EAAA,EAAD,KACA,yBAAM7B,GAAa,4BACnB,SAAC,EAAD,MAGL,C","sources":["components/AddButton/AddButton.styled.jsx","components/AddButton/AddButton.jsx","redux/categories/selectors.jsx","components/Categories/CategoryItem/CategoryItem.styled.jsx","components/Categories/CategoryItem/CategoryItem.jsx","components/Categories/CategoryList/CategoryList.styled.jsx","components/Categories/CategoryList/CategoryList.jsx","pages/Categories.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button``;\n","import { Button } from './AddButton.styled';\n\nexport const AddButton = () => {\n  return <Button>Add</Button>;\n};\n\nexport default AddButton;\n","export const selectCategories = state => state.categories.categoriesArr;\n\nexport const selectIsLoading = state => state.categories.isLoading;\n\nexport const selectError = state => state.categories.error;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 25px;\n\n  background-color: rgb(4, 36, 7);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n\n  :not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-size: 27px;\n  letter-spacing: 4px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s;\n  padding: 10px 20px;\n\n  border-radius: 0.6em;\n  border: 2px solid rgb(53, 202, 8);\n  background: linear-gradient(\n    to right,\n    rgba(27, 253, 156, 0.1) 1%,\n    transparent 40%,\n    transparent 60%,\n    rgba(27, 253, 156, 0.1) 100%\n  );\n  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),\n    0 0 9px 3px rgba(27, 253, 156, 0.1);\n\n  font-size: 10px;\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  color:rgb(53, 202, 8);\n  font-family: monospace;\n \n  :not(:last-child) {\n    margin-right: 12px;\n  }\n\n  :hover {\n    color: rgb(240, 255, 236);\n    box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),\n      0 0 9px 3px rgba(27, 253, 156, 0.2);\n  }\n\n  :before {\n    content: '';\n\n    position: absolute;\n    left: -4em;\n    top: 0;\n\n    width: 4em;\n    height: 100%;\n    background: linear-gradient(\n      to right,\n      transparent 1%,\n      rgba(27, 253, 156, 0.1) 40%,\n      rgba(27, 253, 156, 0.1) 60%,\n      transparent 100%\n    );\n\n    transition: transform 0.4s ease-in-out;\n  }\n\n  :hover:before {\n    transform: translateX(15em);\n`;\n","// import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Item, Text, Button, Wrapper } from './CategoryItem.styled';\n\nconst CategoryItem = ({ id, name, numberOfTasks, date }) => {\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const idCategory = id;\n\n  const handleOnModalActions = () => {\n    return;\n  };\n  const handleOnNavigateTasks = id => {\n    navigate(`/tasks/${idCategory}`);\n  };\n\n  return (\n    <Item>\n      <Text>{name}</Text>\n      <Text>{numberOfTasks}</Text>\n      <Text>{date}</Text>\n      <Wrapper>\n        <Button type=\"button\" onClick={handleOnModalActions}>\n          actions\n        </Button>\n        <Button type=\"button\" onClick={handleOnNavigateTasks}>\n          more\n        </Button>\n      </Wrapper>\n    </Item>\n  );\n};\n\nexport default CategoryItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 90%;\n  padding: 20px;\n  margin: 0 auto;\n\n  background-color: rgb(8, 8, 8);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n`;\n","import { useSelector } from 'react-redux';\nimport { selectCategories } from 'redux/categories/selectors';\nimport CategoryItem from 'components/Categories/CategoryItem/CategoryItem';\nimport { List } from './CategoryList.styled';\n\nconst CategoryList = () => {\n  const categories = useSelector(selectCategories);\n\n  return (\n    <List>\n      {categories.map(({ _id, name, createdAt, numberOfTasks }) => (\n        <CategoryItem\n          key={_id}\n          id={_id}\n          name={name}\n          date={createdAt}\n          numberOfTasks={numberOfTasks}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default CategoryList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport AddButton from 'components/AddButton/AddButton';\nimport CategoryList from 'components/Categories/CategoryList/CategoryList';\nimport { fetchCategories } from 'redux/categories/operations';\nimport { selectIsLoading } from 'redux/categories/selectors';\n\nconst styles = {\n  container: {\n    padding: '30px 0',\n    backgroundColor: 'rgb(34, 90, 17)',\n  },\n};\n\nexport default function Categories() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <Helmet>\n        <title>Categories of tasks</title>\n      </Helmet>\n      <AddButton />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <CategoryList />\n    </div>\n  );\n}\n"],"names":["Button","styled","selectCategories","state","categories","categoriesArr","selectIsLoading","isLoading","Item","Text","Wrapper","id","name","numberOfTasks","date","navigate","useNavigate","idCategory","type","onClick","List","useSelector","map","_id","createdAt","styles","container","padding","backgroundColor","Categories","dispatch","useDispatch","useEffect","fetchCategories","style","Helmet","AddButton"],"sourceRoot":""}
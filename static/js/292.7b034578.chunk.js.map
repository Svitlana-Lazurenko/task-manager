{"version":3,"file":"static/js/292.7b034578.chunk.js","mappings":"gOAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAhB,EAEnBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,SAAhB,E,mBCAvBC,EAAOC,EAAAA,EAAAA,GAAH,gQAcJC,EAAOD,EAAAA,EAAAA,KAAH,oEAKJE,EAAUF,EAAAA,EAAAA,IAAH,0CAIPG,EAASH,EAAAA,EAAAA,OAAH,wqC,SCUnB,EA9BiB,SAAC,GAAmD,IAAjDI,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAE9CC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,UAACX,EAAD,YACE,SAACE,EAAD,UAAOI,KACP,SAACJ,EAAD,UAAOK,KACP,SAACL,EAAD,UAAOM,KACP,SAACN,EAAD,UAAOO,KACP,UAACN,EAAD,YACE,SAACC,EAAD,CAAQQ,KAAK,SAASC,QAdA,WAE3B,EAYK,qBAGA,SAACT,EAAD,CAAQQ,KAAK,SAASC,QAdK,WAC/BH,EAAS,cAAD,OAAeL,GACxB,EAYK,uBAMP,EC/BYS,EAAOb,EAAAA,EAAAA,GAAH,+KCsBjB,EAnBiB,WACf,IAAML,GAAQmB,EAAAA,EAAAA,IAAYrB,GAE1B,OACE,SAACoB,EAAD,UACGlB,EAAMoB,KAAI,gBAAGC,EAAH,EAAGA,IAAKX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,QAAtC,OACT,SAAC,EAAD,CAEEH,KAAMA,EACNC,YAAaA,EACbC,UAAWA,EACXC,QAASA,EACTJ,GAAIY,GALCA,EAFE,KAYhB,E,UCbKC,EAAS,CACbC,UAAW,CACTC,QAAS,SACTC,gBAAiB,mBAEnBC,OAAQ,IAMK,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACX1B,GAAYgB,EAAAA,EAAAA,IAAYjB,GACxBY,GAAWC,EAAAA,EAAAA,MACTN,GAAOqB,EAAAA,EAAAA,MAAPrB,GAWR,OAJAsB,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,IAAWvB,GACrB,GAAE,CAACmB,EAAUnB,KAGZ,iBAAKwB,MAAOX,EAAOC,UAAnB,WAOE,mBACEP,KAAK,SACLC,QAjB6B,WACjCH,EAAS,gBAAD,OAAiBL,GAC1B,EAgBKwB,MAAOX,EAAOI,OAHhB,kBAOA,yBAAMvB,GAAa,4BACnB,SAAC,EAAD,MAGL,C","sources":["redux/tasks/selectors.jsx","components/Tasks/TaskItem/TaskItem.styled.jsx","components/Tasks/TaskItem/TaskItem.jsx","components/Tasks/TaskList/TaskList.styled.jsx","components/Tasks/TaskList/TaskList.jsx","pages/Tasks.jsx"],"sourcesContent":["export const selectTasks = state => state.tasks.tasksArr;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 25px;\n\n  background-color: rgb(4, 36, 7);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n\n  :not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-size: 27px;\n  letter-spacing: 4px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s;\n  padding: 10px 20px;\n\n  border-radius: 0.6em;\n  border: 2px solid rgb(53, 202, 8);\n  background: linear-gradient(\n    to right,\n    rgba(27, 253, 156, 0.1) 1%,\n    transparent 40%,\n    transparent 60%,\n    rgba(27, 253, 156, 0.1) 100%\n  );\n  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),\n    0 0 9px 3px rgba(27, 253, 156, 0.1);\n\n  font-size: 10px;\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  color:rgb(53, 202, 8);\n  font-family: monospace;\n \n  :not(:last-child) {\n    margin-right: 12px;\n  }\n\n  :hover {\n    color: rgb(240, 255, 236);\n    box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),\n      0 0 9px 3px rgba(27, 253, 156, 0.2);\n  }\n\n  :before {\n    content: '';\n\n    position: absolute;\n    left: -4em;\n    top: 0;\n\n    width: 4em;\n    height: 100%;\n    background: linear-gradient(\n      to right,\n      transparent 1%,\n      rgba(27, 253, 156, 0.1) 40%,\n      rgba(27, 253, 156, 0.1) 60%,\n      transparent 100%\n    );\n\n    transition: transform 0.4s ease-in-out;\n  }\n\n  :hover:before {\n    transform: translateX(15em);\n`;\n","// import { useDispatch } from 'react-redux';\n\nimport { useNavigate } from 'react-router-dom';\nimport { Item, Text, Button, Wrapper } from './TaskItem.styled';\n\nconst TaskItem = ({ id, name, description, dateStart, dateEnd }) => {\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // const idItem = id;\n\n  const handleOnDeleteModal = () => {\n    return;\n  };\n  const handleOnNavigateEditTask = () => {\n    navigate(`/edit-task/${id}`);\n  };\n\n  return (\n    <Item>\n      <Text>{name}</Text>\n      <Text>{description}</Text>\n      <Text>{dateStart}</Text>\n      <Text>{dateEnd}</Text>\n      <Wrapper>\n        <Button type=\"button\" onClick={handleOnDeleteModal}>\n          delete\n        </Button>\n        <Button type=\"button\" onClick={handleOnNavigateEditTask}>\n          edit\n        </Button>\n      </Wrapper>\n    </Item>\n  );\n};\n\nexport default TaskItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 90%;\n  padding: 20px;\n  margin: 0 auto;\n\n  background-color: rgb(8, 8, 8);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n`;\n","import { useSelector } from 'react-redux';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport TaskItem from 'components/Tasks/TaskItem/TaskItem';\nimport { List } from './TaskList.styled';\n\nconst TaskList = () => {\n  const tasks = useSelector(selectTasks);\n\n  return (\n    <List>\n      {tasks.map(({ _id, name, description, dateStart, dateEnd }) => (\n        <TaskItem\n          key={_id}\n          name={name}\n          description={description}\n          dateStart={dateStart}\n          dateEnd={dateEnd}\n          id={_id}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default TaskList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\n// import { Helmet } from 'react-helmet';\n// import AddButton from 'components/AddButton/AddButton';\nimport TaskList from 'components/Tasks/TaskList/TaskList';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectIsLoading } from 'redux/tasks/selectors';\n\nconst styles = {\n  container: {\n    padding: '30px 0',\n    backgroundColor: 'rgb(34, 90, 17)',\n  },\n  button: {\n    // padding: '30px 0',\n    // backgroundColor: 'rgb(34, 90, 17)',\n  },\n};\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  // const currentCategory =\n  // const nameOfCategory =\n\n  const handleOnNavigateCreateTask = () => {\n    navigate(`/create-task/${id}`);\n  };\n  useEffect(() => {\n    dispatch(fetchTasks(id));\n  }, [dispatch, id]);\n\n  return (\n    <div style={styles.container}>\n      {/* <Helmet>\n        <title>{nameOfCategory}</title>\n      </Helmet> */}\n      {/* <Button type=\"button\" onClick={handleOnNavigateCreateTask}> */}\n      {/* Add\n      </Button> */}\n      <button\n        type=\"button\"\n        onClick={handleOnNavigateCreateTask}\n        style={styles.button}\n      >\n        Add\n      </button>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </div>\n  );\n}\n"],"names":["selectTasks","state","tasks","tasksArr","selectIsLoading","isLoading","Item","styled","Text","Wrapper","Button","id","name","description","dateStart","dateEnd","navigate","useNavigate","type","onClick","List","useSelector","map","_id","styles","container","padding","backgroundColor","button","Tasks","dispatch","useDispatch","useParams","useEffect","fetchTasks","style"],"sourceRoot":""}
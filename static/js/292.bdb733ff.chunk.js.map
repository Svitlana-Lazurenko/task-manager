{"version":3,"file":"static/js/292.bdb733ff.chunk.js","mappings":"sLAEaA,E,QAASC,EAAAA,OAAH,sB,SCInB,EAJyB,WACvB,OAAO,SAACD,EAAD,iBACR,C,gHCJYE,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAhB,EAEnBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,SAAhB,E,mBCAvBC,EAAOP,EAAAA,EAAAA,GAAH,gQAcJQ,EAAOR,EAAAA,EAAAA,KAAH,oEAKJS,EAAUT,EAAAA,EAAAA,IAAH,0CAIPD,EAASC,EAAAA,EAAAA,OAAH,wqC,SCInB,EA1BiB,SAAC,GAAkD,EAAhDU,GAAiD,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAQpD,OACE,UAACP,EAAD,YACE,SAACC,EAAD,UAAOG,KACP,SAACH,EAAD,UAAOI,KACP,SAACJ,EAAD,UAAOK,KACP,SAACL,EAAD,UAAOM,KACP,UAACL,EAAD,YACE,SAACV,EAAD,CAAQgB,KAAK,SAASC,QAZA,WAE3B,EAUK,qBAGA,SAACjB,EAAD,CAAQgB,KAAK,SAASC,QAZa,WAAQ,EAY3C,uBAMP,ECzBYC,EAAOjB,EAAAA,EAAAA,GAAH,+KCsBjB,EAnBiB,WACf,IAAMG,GAAQe,EAAAA,EAAAA,IAAYjB,GAE1B,OACE,SAACgB,EAAD,UACGd,EAAMgB,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,QAArC,OACT,SAAC,EAAD,CAEEH,KAAMA,EACNC,YAAaA,EACbC,UAAWA,EACXC,QAASA,EACTJ,GAAIA,GALCA,EAFE,KAYhB,E,UCdKU,EAAS,CACbC,UAAW,CACTC,QAAS,SACTC,gBAAiB,oBAIN,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXpB,GAAYY,EAAAA,EAAAA,IAAYb,GAO9B,OAJAsB,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,iBAAKI,MAAOT,EAAOC,UAAnB,WAIE,SAACS,EAAA,EAAD,KACA,yBAAMxB,GAAa,4BACnB,SAAC,EAAD,MAGL,C","sources":["components/AddButton/AddButton.styled.jsx","components/AddButton/AddButton.jsx","redux/tasks/selectors.jsx","components/Tasks/TaskItem/TaskItem.styled.jsx","components/Tasks/TaskItem/TaskItem.jsx","components/Tasks/TaskList/TaskList.styled.jsx","components/Tasks/TaskList/TaskList.jsx","pages/Tasks.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button``;\n","import { Button } from './AddButton.styled';\n\nexport const AddButton = () => {\n  return <Button>Add</Button>;\n};\n\nexport default AddButton;\n","export const selectTasks = state => state.tasks.tasksArr;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 25px;\n\n  background-color: rgb(4, 36, 7);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n\n  :not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-size: 27px;\n  letter-spacing: 4px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s;\n  padding: 10px 20px;\n\n  border-radius: 0.6em;\n  border: 2px solid rgb(53, 202, 8);\n  background: linear-gradient(\n    to right,\n    rgba(27, 253, 156, 0.1) 1%,\n    transparent 40%,\n    transparent 60%,\n    rgba(27, 253, 156, 0.1) 100%\n  );\n  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),\n    0 0 9px 3px rgba(27, 253, 156, 0.1);\n\n  font-size: 10px;\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  color:rgb(53, 202, 8);\n  font-family: monospace;\n \n  :not(:last-child) {\n    margin-right: 12px;\n  }\n\n  :hover {\n    color: rgb(240, 255, 236);\n    box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),\n      0 0 9px 3px rgba(27, 253, 156, 0.2);\n  }\n\n  :before {\n    content: '';\n\n    position: absolute;\n    left: -4em;\n    top: 0;\n\n    width: 4em;\n    height: 100%;\n    background: linear-gradient(\n      to right,\n      transparent 1%,\n      rgba(27, 253, 156, 0.1) 40%,\n      rgba(27, 253, 156, 0.1) 60%,\n      transparent 100%\n    );\n\n    transition: transform 0.4s ease-in-out;\n  }\n\n  :hover:before {\n    transform: translateX(15em);\n`;\n","// import { useDispatch } from 'react-redux';\nimport { Item, Text, Button, Wrapper } from './TaskItem.styled';\n\nconst TaskItem = ({ id, name, description, dateStart, dateEnd }) => {\n  // const dispatch = useDispatch();\n\n  const handleOnDeleteModal = () => {\n    return;\n  };\n  const handleOnNavigateCreateOrEditTask = () => {};\n\n  return (\n    <Item>\n      <Text>{name}</Text>\n      <Text>{description}</Text>\n      <Text>{dateStart}</Text>\n      <Text>{dateEnd}</Text>\n      <Wrapper>\n        <Button type=\"button\" onClick={handleOnDeleteModal}>\n          delete\n        </Button>\n        <Button type=\"button\" onClick={handleOnNavigateCreateOrEditTask}>\n          edit\n        </Button>\n      </Wrapper>\n    </Item>\n  );\n};\n\nexport default TaskItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 90%;\n  padding: 20px;\n  margin: 0 auto;\n\n  background-color: rgb(8, 8, 8);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n`;\n","import { useSelector } from 'react-redux';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport TaskItem from 'components/Tasks/TaskItem/TaskItem';\nimport { List } from './TaskList.styled';\n\nconst TaskList = () => {\n  const tasks = useSelector(selectTasks);\n\n  return (\n    <List>\n      {tasks.map(({ id, name, description, dateStart, dateEnd }) => (\n        <TaskItem\n          key={id}\n          name={name}\n          description={description}\n          dateStart={dateStart}\n          dateEnd={dateEnd}\n          id={id}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default TaskList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport AddButton from 'components/AddButton/AddButton';\nimport TaskList from 'components/Tasks/TaskList/TaskList';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectIsLoading } from 'redux/tasks/selectors';\n\nconst styles = {\n  container: {\n    padding: '30px 0',\n    backgroundColor: 'rgb(34, 90, 17)',\n  },\n};\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  // const nameOfCategory =\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      {/* <Helmet>\n        <title>{nameOfCategory}</title>\n      </Helmet> */}\n      <AddButton />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </div>\n  );\n}\n"],"names":["Button","styled","selectTasks","state","tasks","tasksArr","selectIsLoading","isLoading","Item","Text","Wrapper","id","name","description","dateStart","dateEnd","type","onClick","List","useSelector","map","styles","container","padding","backgroundColor","Tasks","dispatch","useDispatch","useEffect","fetchTasks","style","AddButton"],"sourceRoot":""}
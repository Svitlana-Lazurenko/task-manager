{"version":3,"file":"static/js/322.d752988f.chunk.js","mappings":"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","sources":["components/CreateOrEditTaskForm/CreateOrEditTaskForm.styled.jsx","components/CreateOrEditTaskForm/CreateOrEditTaskForm.jsx","pages/CreateTask.jsx","redux/categories/selectors.jsx","redux/tasks/selectors.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  width: 50%;\n  padding: 40px 40px 60px 40px;\n  margin: 0 auto;\n\n  background-color: rgb(141, 247, 241);\n  border-radius: 10px;\n  border: 2px solid rgb(2, 211, 200);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n  letter-spacing: 2px;\n`;\n\nexport const Text = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  margin-left: 20px;\n\n  letter-spacing: 5px;\n  font-size: 15px;\n`;\n\nexport const InputText = styled.input`\n  height: 35px;\n  padding: 10px 25px;\n  margin-top: 5px;\n\n  background: rgb(255, 249, 198);\n  border-radius: 10px;\n  border: 2px solid rgb(2, 211, 200);\n  outline-color: rgb(53, 202, 8);\n\n  font-size: 20px;\n  letter-spacing: 5px;\n`;\n\nexport const InputTextArea = styled.textarea`\n  resize: vertical;\n  padding: 10px 25px;\n\n  background: rgb(255, 249, 198);\n  border-radius: 10px;\n  border: 2px solid rgb(2, 211, 200);\n  outline-color: rgb(53, 202, 8);\n\n  font-size: 20px;\n  letter-spacing: 5px;\n`;\n\nexport const InputDate = styled.input`\n  padding: 10px 25px;\n\n  background: rgb(255, 249, 198);\n  border-radius: 10px;\n  border: 2px solid rgb(2, 211, 200);\n  outline-color: rgb(53, 202, 8);\n\n  font-size: 20px;\n  letter-spacing: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  height: 40px;\n  width: 100px;\n  margin: 0 auto;\n\n  border-radius: 0.6em;\n  border: 2px solid rgb(53, 202, 8);\n  background-color: rgb(216, 255, 193);\n\n  fontSize: 15,\n  fontWeight: 600,\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  color: rgb(0, 167, 158);\n\n  :hover {\n    background-color: rgb(253, 239, 109);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\n\nimport { addTask, changeTask } from 'redux/tasks/operations';\nimport { selectCurrentTask } from 'redux/tasks/selectors';\nimport { selectCurrentCategoryId } from 'redux/categories/selectors';\nimport {\n  Form,\n  Label,\n  Button,\n  Text,\n  InputText,\n  InputTextArea,\n  InputDate,\n} from './CreateOrEditTaskForm.styled';\n\nconst CreateOrEditTaskForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { id } = useParams();\n  const categoryId = useSelector(selectCurrentCategoryId);\n  const currentTask = useSelector(selectCurrentTask);\n\n  const locationArr = location.pathname.split('/');\n\n  const [name, setName] = useState(\n    locationArr[1] === 'create-task' ? '' : currentTask.name\n  );\n  const [description, setDescription] = useState(\n    locationArr[1] === 'create-task' ? '' : currentTask.description\n  );\n  const [dateStart, setDateStart] = useState(\n    locationArr[1] === 'create-task' ? '' : currentTask.dateStart\n  );\n  const [dateEnd, setDateEnd] = useState(\n    locationArr[1] === 'create-task' ? '' : currentTask.dateEnd\n  );\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleChangeDateStart = e => {\n    setDateStart(e.target.value);\n  };\n\n  const handleChangeDateEnd = e => {\n    setDateEnd(e.target.value);\n  };\n\n  const handleSubmitNewTask = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      addTask({\n        id,\n        task: {\n          name: form.elements.name.value.trim(),\n          description: form.elements.description.value.trim(),\n          dateStart: form.elements.dateStart.value.trim(),\n          dateEnd: form.elements.dateEnd.value.trim(),\n        },\n      })\n    );\n    form.reset();\n    navigate(`/tasks/${categoryId}`);\n  };\n\n  const handleSubmitEditedTask = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      changeTask({\n        id,\n        task: {\n          name: form.elements.name.value.trim(),\n          description: form.elements.description.value.trim(),\n          dateStart: form.elements.dateStart.value.trim(),\n          dateEnd: form.elements.dateEnd.value.trim(),\n        },\n      })\n    );\n    form.reset();\n    navigate(`/tasks/${categoryId}`);\n  };\n\n  return (\n    <Form\n      onSubmit={\n        locationArr[1] === 'create-task'\n          ? handleSubmitNewTask\n          : handleSubmitEditedTask\n      }\n      autoComplete=\"off\"\n    >\n      <Label>\n        <Text> Name</Text>\n        <InputText\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </Label>\n      <Label>\n        <Text> Description</Text>\n        <InputTextArea\n          name=\"description\"\n          rows=\"5\"\n          value={description}\n          onChange={handleChangeDescription}\n        />\n      </Label>\n      <Label>\n        <Text> Name</Text>\n        <InputDate\n          type=\"date\"\n          name=\"dateStart\"\n          value={dateStart}\n          onChange={handleChangeDateStart}\n        />\n      </Label>\n      <Label>\n        <Text> Name</Text>\n        <InputDate\n          type=\"date\"\n          name=\"dateEnd\"\n          value={dateEnd}\n          onChange={handleChangeDateEnd}\n        />\n      </Label>\n      <Button type=\"submit\">Save</Button>\n    </Form>\n  );\n};\n\nexport default CreateOrEditTaskForm;\n","import { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport CreateOrEditTaskForm from 'components/CreateOrEditTaskForm/CreateOrEditTaskForm';\nimport { selectCurrentCategoryId } from 'redux/categories/selectors';\n\nconst styles = {\n  container: {\n    height: `100vh`,\n    padding: `60px`,\n  },\n\n  button: {\n    height: 40,\n\n    padding: '10px 20px',\n    display: 'block',\n    overflow: 'hidden',\n\n    border: '2px solid rgb(2, 211, 200)',\n    borderRadius: 10,\n\n    color: 'rgb(125, 202, 0)',\n    fontSize: 15,\n    fontWeight: 600,\n\n    textTransform: 'uppercase',\n    letterSpacing: 6,\n\n    marginBottom: 20,\n    marginLeft: 167,\n    backgroundColor: 'transparent',\n  },\n};\n\nexport default function CreateOrEditTask() {\n  const navigate = useNavigate();\n  const categoryId = useSelector(selectCurrentCategoryId);\n\n  const handleOnNavigateBack = e => {\n    navigate(`/tasks/${categoryId}`);\n  };\n\n  return (\n    <div style={styles.container}>\n      <button\n        style={styles.button}\n        type=\"button\"\n        onClick={handleOnNavigateBack}\n      >\n        Back\n      </button>\n      <CreateOrEditTaskForm />\n    </div>\n  );\n}\n","export const selectCategories = state => state.categories.categoriesArr;\n\nexport const selectIsLoading = state => state.categories.isLoading;\n\nexport const selectError = state => state.categories.error;\n\nexport const selectCurrentCategoryId = state =>\n  state.categories.currentCategoryId;\n\nexport const selectCurrentCategoryName = state =>\n  state.categories.currentCategoryName;\n","export const selectTasks = state => state.tasks.tasksArr;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n\nexport const selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nexport const selectCurrentTask = state => state.tasks.currentTask;\n"],"names":["Form","styled","Label","Text","InputText","InputTextArea","InputDate","Button","navigate","useNavigate","dispatch","useDispatch","location","useLocation","id","useParams","categoryId","useSelector","selectCurrentCategoryId","currentTask","selectCurrentTask","locationArr","pathname","split","useState","name","setName","description","setDescription","dateStart","setDateStart","dateEnd","setDateEnd","onSubmit","e","preventDefault","form","currentTarget","addTask","task","elements","value","trim","reset","changeTask","autoComplete","type","onChange","target","rows","styles","container","height","padding","button","display","overflow","border","borderRadius","color","fontSize","fontWeight","textTransform","letterSpacing","marginBottom","marginLeft","backgroundColor","CreateOrEditTask","style","onClick","selectCategories","state","categories","categoriesArr","selectIsLoading","isLoading","currentCategoryId","selectCurrentCategoryName","currentCategoryName","selectTasks","tasks","tasksArr","selectCurrentTaskId","currentTaskId"],"sourceRoot":""}
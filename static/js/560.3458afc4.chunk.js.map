{"version":3,"file":"static/js/560.3458afc4.chunk.js","mappings":"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","sources":["components/Popup/Popup.styled.jsx","components/Popup/Popup.jsx","components/Tasks/TaskItem/TaskItem.styled.jsx","components/Tasks/TaskItem/TaskItem.jsx","components/Tasks/TaskList/TaskList.styled.jsx","components/Tasks/TaskList/TaskList.jsx","pages/Tasks.jsx","redux/categories/selectors.jsx","redux/popup/selectors.jsx","redux/tasks/selectors.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PopupBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const PopupContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 600px;\n  width: 100%;\n  padding: 12px;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport {\n  setStatusEditCategoryPopup,\n  setStatusAddCategoryPopup,\n  setStatusDeleteTaskPopup,\n  setStatusDeleteCategoryPopup,\n  setStatusMenuPopup,\n} from 'redux/popup/slice';\nimport {\n  setCurrentCategoryId,\n  setCurrentCategoryName,\n} from 'redux/categories/slice';\nimport { setCurrentTaskId } from 'redux/tasks/slice';\nimport {\n  selectIsShowDeleteTaskPopup,\n  selectIsShowDeleteCategoryPopup,\n  selectIsShowEditCategoryPopup,\n  selectIsShowAddCategoryPopup,\n  selectIsShowMenuPopup,\n} from 'redux/popup/selectors';\nimport {\n  selectCurrentCategoryId,\n  selectCurrentCategoryName,\n} from 'redux/categories/selectors';\nimport { selectCurrentTaskId } from 'redux/tasks/selectors';\nimport { deleteTask } from 'redux/tasks/operations';\nimport {\n  deleteCategory,\n  changeCategory,\n  addCategory,\n} from 'redux/categories/operations';\nimport { PopupBackdrop, PopupContent } from './Popup.styled';\n\nconst Popup = () => {\n  const isShowDeleteTaskPopup = useSelector(selectIsShowDeleteTaskPopup);\n  const isShowDeleteCategoryPopup = useSelector(\n    selectIsShowDeleteCategoryPopup\n  );\n  const isShowAddCategoryPopup = useSelector(selectIsShowAddCategoryPopup);\n  const isShowEditCategoryPopup = useSelector(selectIsShowEditCategoryPopup);\n  const isShowMenuPopup = useSelector(selectIsShowMenuPopup);\n  const categoryId = useSelector(selectCurrentCategoryId);\n  const categoryName = useSelector(selectCurrentCategoryName);\n  const taskId = useSelector(selectCurrentTaskId);\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(categoryName);\n\n  const resetState = useCallback(() => {\n    dispatch(setStatusDeleteTaskPopup(false));\n    dispatch(setStatusDeleteCategoryPopup(false));\n    dispatch(setStatusEditCategoryPopup(false));\n    dispatch(setStatusAddCategoryPopup(false));\n    dispatch(setStatusMenuPopup(false));\n    dispatch(setCurrentTaskId(null));\n    dispatch(setCurrentCategoryId(null));\n    dispatch(setCurrentCategoryName(''));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        resetState();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, resetState]);\n\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      resetState();\n    }\n  };\n\n  const handleCloseClick = () => {\n    resetState();\n  };\n\n  const handleOnEditCategory = e => {\n    dispatch(setStatusMenuPopup(false));\n    dispatch(setStatusEditCategoryPopup(true));\n  };\n\n  const handleOnDeleteCategory = e => {\n    dispatch(setStatusMenuPopup(false));\n    dispatch(setStatusDeleteCategoryPopup(true));\n  };\n\n  const handleSubmitNewCategory = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    dispatch(addCategory({ name }));\n    form.reset();\n    resetState();\n  };\n\n  const handleSubmitEditedCategory = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    dispatch(\n      changeCategory({\n        id: categoryId,\n        name,\n      })\n    );\n    form.reset();\n    resetState();\n  };\n\n  const handleSubmitDeletedCategory = e => {\n    e.preventDefault();\n    dispatch(deleteCategory(categoryId));\n    resetState();\n  };\n\n  const handleSubmitDeletedTask = e => {\n    e.preventDefault();\n    dispatch(deleteTask(taskId));\n    resetState();\n  };\n\n  return createPortal(\n    <PopupBackdrop onClick={handleBackdropClick}>\n      <PopupContent>\n        {isShowMenuPopup && (\n          <div>\n            <button type=\"button\" onClick={handleOnEditCategory}>\n              Edit\n            </button>\n            <button type=\"button\" onClick={handleOnDeleteCategory}>\n              Delete\n            </button>\n          </div>\n        )}\n        {isShowDeleteCategoryPopup && (\n          <div>\n            <span>Do you want to delete this category ?</span>\n            <button type=\"button\" onClick={handleSubmitDeletedCategory}>\n              yes\n            </button>\n            <button type=\"button\" onClick={handleCloseClick}>\n              no\n            </button>\n          </div>\n        )}\n        {isShowEditCategoryPopup && (\n          <div>\n            <form onSubmit={handleSubmitEditedCategory}>\n              <label>\n                <span>Edit {categoryName} category</span>\n                <input\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={handleChange}\n                />\n              </label>\n              <button type=\"submit\">save</button>\n              <button type=\"button\" onClick={handleCloseClick}>\n                cancel\n              </button>\n            </form>\n          </div>\n        )}\n        {isShowAddCategoryPopup && (\n          <div>\n            <form onSubmit={handleSubmitNewCategory}>\n              <label>\n                <span>Add new category</span>\n                <input\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={handleChange}\n                />\n              </label>\n              <button type=\"submit\">save</button>\n              <button type=\"button\" onClick={handleCloseClick}>\n                cancel\n              </button>\n            </form>\n          </div>\n        )}\n        {isShowDeleteTaskPopup && (\n          <div>\n            <span>Do you want to delete this task ?</span>\n            <button type=\"button\" onClick={handleSubmitDeletedTask}>\n              yes\n            </button>\n            <button type=\"button\" onClick={handleCloseClick}>\n              no\n            </button>\n          </div>\n        )}\n        <button\n          type=\"button\"\n          onClick={handleCloseClick}\n          className=\"Popup__close\"\n        >\n          close\n        </button>\n      </PopupContent>\n    </PopupBackdrop>,\n    document.querySelector('#task-popup-root')\n  );\n};\n\nexport default Popup;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 25px;\n\n  background-color: rgb(4, 36, 7);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n\n  :not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-size: 27px;\n  letter-spacing: 4px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s;\n  padding: 10px 20px;\n\n  border-radius: 0.6em;\n  border: 2px solid rgb(53, 202, 8);\n  background: linear-gradient(\n    to right,\n    rgba(27, 253, 156, 0.1) 1%,\n    transparent 40%,\n    transparent 60%,\n    rgba(27, 253, 156, 0.1) 100%\n  );\n  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),\n    0 0 9px 3px rgba(27, 253, 156, 0.1);\n\n  font-size: 10px;\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  color:rgb(53, 202, 8);\n  font-family: monospace;\n \n  :not(:last-child) {\n    margin-right: 12px;\n  }\n\n  :hover {\n    color: rgb(240, 255, 236);\n    box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),\n      0 0 9px 3px rgba(27, 253, 156, 0.2);\n  }\n\n  :before {\n    content: '';\n\n    position: absolute;\n    left: -4em;\n    top: 0;\n\n    width: 4em;\n    height: 100%;\n    background: linear-gradient(\n      to right,\n      transparent 1%,\n      rgba(27, 253, 156, 0.1) 40%,\n      rgba(27, 253, 156, 0.1) 60%,\n      transparent 100%\n    );\n\n    transition: transform 0.4s ease-in-out;\n  }\n\n  :hover:before {\n    transform: translateX(15em);\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Item, Text, Button, Wrapper } from './TaskItem.styled';\nimport { setStatusDeleteTaskPopup } from 'redux/popup/slice';\nimport { setCurrentTaskId, setCurrentTask } from 'redux/tasks/slice';\n\nconst TaskItem = ({ id, name, description, dateStart, dateEnd }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleOnPopup = () => {\n    dispatch(setStatusDeleteTaskPopup(true));\n    dispatch(setCurrentTaskId(id));\n  };\n\n  const handleOnNavigateEditTask = () => {\n    dispatch(setCurrentTask({ id, name, description, dateStart, dateEnd }));\n    navigate(`/edit-task/${id}`);\n  };\n\n  return (\n    <Item>\n      <Text>{name}</Text>\n      <Text>{description}</Text>\n      <Text>{dateStart}</Text>\n      <Text>{dateEnd}</Text>\n      <Wrapper>\n        <Button type=\"button\" onClick={handleOnPopup}>\n          delete\n        </Button>\n        <Button type=\"button\" onClick={handleOnNavigateEditTask}>\n          edit\n        </Button>\n      </Wrapper>\n    </Item>\n  );\n};\n\nexport default TaskItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 90%;\n  padding: 20px;\n  margin: 0 auto;\n\n  background-color: rgb(8, 8, 8);\n  border-radius: 10px;\n  border: 2px solid rgb(53, 202, 8);\n`;\n","import { useSelector } from 'react-redux';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport TaskItem from 'components/Tasks/TaskItem/TaskItem';\nimport { List } from './TaskList.styled';\n\nconst TaskList = () => {\n  const tasks = useSelector(selectTasks);\n\n  return (\n    <List>\n      {tasks.map(({ _id, name, description, dateStart, dateEnd }) => (\n        <TaskItem\n          key={_id}\n          name={name}\n          description={description}\n          dateStart={dateStart}\n          dateEnd={dateEnd}\n          id={_id}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default TaskList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport TaskList from 'components/Tasks/TaskList/TaskList';\nimport Popup from 'components/Popup/Popup';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectIsLoading } from 'redux/tasks/selectors';\nimport { selectIsShowDeleteTaskPopup } from 'redux/popup/selectors';\n\nconst styles = {\n  container: {\n    padding: '30px 0',\n    backgroundColor: 'rgb(34, 90, 17)',\n  },\n  button: {},\n};\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const isShowDeleteTaskPopup = useSelector(selectIsShowDeleteTaskPopup);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks(id));\n  }, [dispatch, id]);\n\n  const handleOnNavigateCreateTask = () => {\n    navigate(`/create-task/${id}`);\n  };\n\n  const handleOnNavigateCategories = () => {\n    navigate('/categories');\n  };\n\n  return (\n    <div style={styles.container}>\n      <button\n        type=\"button\"\n        onClick={handleOnNavigateCategories}\n        style={styles.button}\n      >\n        Back\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleOnNavigateCreateTask}\n        style={styles.button}\n      >\n        Add\n      </button>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n      {isShowDeleteTaskPopup && <Popup></Popup>}\n    </div>\n  );\n}\n","export const selectCategories = state => state.categories.categoriesArr;\n\nexport const selectIsLoading = state => state.categories.isLoading;\n\nexport const selectError = state => state.categories.error;\n\nexport const selectCurrentCategoryId = state =>\n  state.categories.currentCategoryId;\n\nexport const selectCurrentCategoryName = state =>\n  state.categories.currentCategoryName;\n","export const selectIsShowDeleteTaskPopup = state =>\n  state.popup.isShowDeleteTaskPopup;\n\nexport const selectIsShowDeleteCategoryPopup = state =>\n  state.popup.isShowDeleteCategoryPopup;\n\nexport const selectIsShowEditCategoryPopup = state =>\n  state.popup.isShowEditCategoryPopup;\n\nexport const selectIsShowAddCategoryPopup = state =>\n  state.popup.isShowAddCategoryPopup;\n\nexport const selectIsShowMenuPopup = state => state.popup.isShowMenuPopup;\n","export const selectTasks = state => state.tasks.tasksArr;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n\nexport const selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nexport const selectCurrentTask = state => state.tasks.currentTask;\n"],"names":["PopupBackdrop","styled","PopupContent","isShowDeleteTaskPopup","useSelector","selectIsShowDeleteTaskPopup","isShowDeleteCategoryPopup","selectIsShowDeleteCategoryPopup","isShowAddCategoryPopup","selectIsShowAddCategoryPopup","isShowEditCategoryPopup","selectIsShowEditCategoryPopup","isShowMenuPopup","selectIsShowMenuPopup","categoryId","selectCurrentCategoryId","categoryName","selectCurrentCategoryName","taskId","selectCurrentTaskId","dispatch","useDispatch","useState","name","setName","resetState","useCallback","setStatusDeleteTaskPopup","setStatusDeleteCategoryPopup","setStatusEditCategoryPopup","setStatusAddCategoryPopup","setStatusMenuPopup","setCurrentTaskId","setCurrentCategoryId","setCurrentCategoryName","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","handleChange","target","value","handleCloseClick","createPortal","onClick","currentTarget","type","preventDefault","deleteCategory","onSubmit","form","elements","changeCategory","id","reset","onChange","addCategory","deleteTask","className","document","querySelector","Item","Text","Wrapper","Button","description","dateStart","dateEnd","navigate","useNavigate","setCurrentTask","List","tasks","selectTasks","map","_id","styles","container","padding","backgroundColor","button","Tasks","useParams","isLoading","selectIsLoading","fetchTasks","style","Popup","selectCategories","state","categories","categoriesArr","currentCategoryId","currentCategoryName","popup","tasksArr","currentTaskId","selectCurrentTask","currentTask"],"sourceRoot":""}